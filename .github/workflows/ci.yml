name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  asan-ubsan:
    name: ASan/UBSan (${{ matrix.cc }})
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix: { cc: [ gcc, clang ] }
    env:
      CMAKE_GENERATOR: Ninja
      ASAN_OPTIONS: detect_leaks=1:check_initialization_order=true:strict_init_order=true
      UBSAN_OPTIONS: print_stacktrace=1
    steps:
      - uses: actions/checkout@v4

      # На раннере уже есть gcc/clang/cmake/ninja — просто покажем версии
      - name: Toolchain versions
        run: |
          echo "Using CC=${{ matrix.cc }}"
          ${{ matrix.cc }} --version || true
          cmake --version
          ninja --version

      - name: Configure (ASan/UBSan)
        run: |
          cmake -S . -B build-asan-${{ matrix.cc }} -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_C_COMPILER=${{ matrix.cc }} \
            -DENABLE_SANITIZERS=ON \
            -DBUILD_TESTING=ON

      - name: Build
        run: cmake --build build-asan-${{ matrix.cc }} -j

      - name: CTest (verbose)
        env: { CTEST_OUTPUT_ON_FAILURE: "1" }
        run: ctest --test-dir build-asan-${{ matrix.cc }} -V

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-asan-${{ matrix.cc }}
          path: |
            build-asan-${{ matrix.cc }}/Testing/Temporary/LastTest.log
            build-asan-${{ matrix.cc }}/CMakeFiles/CMakeError.log
            build-asan-${{ matrix.cc }}/CMakeFiles/CMakeOutput.log
          if-no-files-found: warn

  memcheck:
    name: Valgrind (gcc)
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    env: { CMAKE_GENERATOR: Ninja }
    steps:
      - uses: actions/checkout@v4

      - name: Ensure valgrind (with retries)
        timeout-minutes: 5
        run: |
          if ! command -v valgrind >/dev/null; then
            sudo apt-get update -o Acquire::Retries=3
            sudo apt-get install -y valgrind
          fi
          valgrind --version

      - name: Configure (NO sanitizers)
        run: |
          cmake -S . -B build-memcheck -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_C_COMPILER=gcc \
            -DENABLE_SANITIZERS=OFF \
            -DBUILD_TESTING=ON

      - name: Build
        run: cmake --build build-memcheck -j

      - name: Run valgrind on tests
        run: |
          valgrind --leak-check=full ./build-memcheck/test_logger
          valgrind --leak-check=full ./build-memcheck/test_mem

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-memcheck
          path: |
            build-memcheck/Testing/Temporary/LastTest.log
            build-memcheck/CMakeFiles/CMakeError.log
            build-memcheck/CMakeFiles/CMakeOutput.log
          if-no-files-found: warn
